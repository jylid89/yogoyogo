<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage">

<!-- 케이터링 신청현황 (일반사용자) -->
<select id="selectCate_user" resultType="yogo.catering.dto.CateringVO"> 
	SELECT cate.*, truck.truck_name, truck.truck_addr, truck.truck_num, truck.truck_picreal1 FROM tb_cateconf cate, tb_truck truck
	WHERE cate.mem_id = #{mem_id} AND cate.truck_num = truck.truck_num
	ORDER BY cate.cate_num DESC
</select>

<!-- 케이터링 신청현황 ( 사업자 ) -->
<select id="selectCate_ceo" resultType="yogo.catering.dto.CateringVO">
	SELECT cate.*, mem.*, truck.*
	FROM tb_cateconf cate, tb_member mem, tb_truck truck
	WHERE cate.mem_id = mem.mem_id 
	AND cate.truck_num = truck.truck_num
	AND cate.cate_state NOT IN( '거절' , '승인' )
</select>

<!-- 케이터링 승인현황 ( 사업자 ) -->
<select id="selectApprove_ceo" resultType="yogo.catering.dto.CateringVO">
	SELECT cate.*, mem.*, truck.*
	FROM tb_cateconf cate, tb_member mem, tb_truck truck
	WHERE cate.mem_id = mem.mem_id 
	AND cate.truck_num = truck.truck_num
	AND cate.cate_state = '승인'
</select>

<!-- (광고업체)광고신청현황 -->
<select id="selectConfList_adver" resultType="yogo.adver.dto.AdverVO" parameterType="String"> 
	SELECT c.*, a.*,t.*
	FROM tb_adverconf c, tb_adver a, tb_truck t
	WHERE c.adv_num = a.adv_num
	AND t.truck_num = c.truck_num
	AND a.mem_id = #{mem_id}
	AND c.advconf_state not in( '거절' , '승인' )
</select>

<!-- 광고거절 UPDATE -->
<update id="advRefuseUpdate" parameterType="yogo.adver.dto.AdverVO">
	UPDATE tb_adverconf
	SET advconf_state = '거절' , advconf_reason = #{advconf_reason}
	WHERE adv_num = #{adv_num}
	AND truck_num = #{truck_num}

</update>

<!-- 광고거절 승인 -->
<update id="advOkUpdate" parameterType="yogo.adver.dto.AdverVO">
	UPDATE tb_adverconf
	SET advconf_state = '승인' , advconf_reason = #{advconf_reason}
	WHERE adv_num = #{adv_num}
	AND truck_num = #{truck_num}
</update>

<!-- 광고승인확인List -->
<select id="adverAppConfirm" resultType="yogo.adver.dto.AdverVO" parameterType="String"> 
	SELECT c.*, a.*,t.*
	FROM tb_adverconf c, tb_adver a, tb_truck t
	WHERE c.adv_num = a.adv_num
	AND t.truck_num = c.truck_num
	AND a.mem_id = #{mem_id}
	AND c.advconf_state = '승인'
</select>

<!-- 개인정보 셀렉 -->
<select id="selectMember" resultType="yogo.member.dto.MemberVO" parameterType="String">
	SELECT * FROM tb_member WHERE mem_id = #{mem_id}
</select>

<!-- 사업자 개인정보 셀렉 -->
<select id="selectCeoMember" resultType="yogo.member.dto.MemberVO" parameterType="String">
	SELECT * 
	FROM tb_member m, tb_truck t
	WHERE t.mem_id = m.mem_id
	AND m.mem_id = #{mem_id}
</select>

<!-- 개인정보 업데이트 -->
<update id="memberUpdate" parameterType="yogo.member.dto.MemberVO">
	UPDATE tb_member 
	SET mem_call = #{mem_call}, mem_pass = #{mem_pass}
	WHERE mem_id = #{mem_id}
</update>

<!-- 메뉴정보 셀렉 -->
<select id="selectMenu" resultType="yogo.menu.dto.MenuVO" parameterType="String">
	SELECT menu.*, truck.truck_name, truck.truck_addr FROM tb_member member, tb_truck truck, tb_menu menu
	WHERE member.mem_id = truck.mem_id AND truck.truck_num = menu.truck_num AND member.mem_id = #{mem_id}
</select>

<!-- 메뉴 seq 가져오기 -->
<select id="selectMenuSeq" resultType="String">
	SELECT menu_seq.nextval FROM dual
</select>

<!-- 메뉴 추가 -->
<insert id="menuAdd" parameterType="yogo.menu.dto.MenuVO">
	INSERT INTO tb_menu VALUES (#{menu_num}, #{truck_num}, #{menu_name}, #{menu_content}, #{menu_picreal}, #{menu_price}, #{menu_cate})	
</insert>

<!-- 메뉴 수정 -->
<update id="menuMod" parameterType="yogo.menu.dto.MenuVO">
	UPDATE tb_menu 
	SET menu_name = #{menu_name}, menu_content = #{menu_content}, menu_price = #{menu_price}, menu_cate = #{menu_cate}, menu_picreal = #{menu_picreal}
	WHERE menu_num = #{menu_num}
</update>

<!-- 메뉴 삭제 -->
<delete id="menuDel" parameterType="yogo.menu.dto.MenuVO">
	DELETE FROM tb_menu WHERE menu_num = #{menu_num}
</delete>

<!-- (사업자)광고신청현황 -->
<select id="adverAppStatus_ceo" resultType="yogo.adver.dto.AdverVO" parameterType="String"> 
	SELECT   ad.adv_title, m.mem_nick, a.advconf_state , a.advconf_reason, ad.adv_num
    FROM     tb_truck t, tb_adverconf a, tb_adver ad, tb_member m
    WHERE   t.truck_num = a.truck_num
    AND      a.adv_num = ad.adv_num
    AND      ad.mem_id = m.mem_id
    AND 		t.mem_id =#{mem_id}
</select>

<!-- 비밀번호 check(ajax) -->
<select id="passCheck" resultType="String" parameterType="hashmap"> 
	SELECT count(*)
	FROM tb_member
	WHERE mem_id = #{mem_id}
	AND mem_pass = #{mem_pass}
</select>

<!-- 사업자 정보수정 -->
<update id="cedUpdate" parameterType="yogo.member.dto.MemberVO">
	UPDATE tb_truck
	SET truck_name = #{truck_name}, car_number = #{car_number},
	       truck_addr = #{truck_addr},   truck_postnum = #{truck_postnum}, 
	       truck_catestate = #{truck_catestate}, truck_picreal1 = #{truck_picreal1}
	WHERE mem_id = #{mem_id}
</update>

<!-- (사업자)케이터링 요청 승인 시 -->
<update id="catAppConfirm" parameterType="yogo.catering.dto.CateringVO">
	UPDATE 	tb_cateconf
	SET 	cate_state='승인'
	WHERE 	cate_num = #{cate_num}
</update>

<!-- (사업자)케이터링 요청 거절 시 -->
<update id="catAppReject" parameterType="yogo.catering.dto.CateringVO">
	UPDATE 	tb_cateconf
	SET 	cate_state='거절' , cate_reason = #{cate_reason}
	WHERE 	cate_num = #{cate_num}
</update>

<!-- 트럭정보 가지고 오기 -->
<select id="selectTruck" parameterType="String" resultType="yogo.menu.dto.MenuVO">
	SELECT truck_name, truck_addr, truck_num
	FROM tb_truck
	WHERE truck_num = #{truck_num}
</select>

</mapper>